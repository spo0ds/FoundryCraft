{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NTNFT__CanOnlyMintOnce",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NTNFT__NftNotTransferrable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NTNFT__NotNFTOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "hasMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintNft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040518060400160405280600681526020016509ef082eae8d60d31b8152506040518060400160405280600281526020016109ef60f31b81525081600090816200005d91906200011a565b5060016200006c82826200011a565b505050620001e6565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a057607f821691505b602082108103620000c157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011557600081815260208120601f850160051c81016020861015620000f05750805b601f850160051c820191505b818110156200011157828155600101620000fc565b5050505b505050565b81516001600160401b0381111562000136576200013662000075565b6200014e816200014784546200008b565b84620000c7565b602080601f8311600181146200018657600084156200016d5750858301515b600019600386901b1c1916600185901b17855562000111565b600085815260208120601f198616915b82811015620001b75788860151825594840194600190910190840162000196565b5085821015620001d65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d0380620001f66000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb4651461021e578063b88d4fde1461022c578063c2229fea1461023a578063c87b56dd14610242578063e985e9c51461025557600080fd5b80636352211e146101da5780636e02007d146101ed57806370a082311461020357806395d89b411461021657600080fd5b806323b872dd116100de57806323b872dd1461018d57806338e21cce1461019b57806342842e0e1461018d57806342966c68146101c757600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e3660046108fa565b610263565b60405190151581526020015b60405180910390f35b6101406102b5565b60405161012f9190610964565b61016061015b366004610977565b610347565b6040516001600160a01b03909116815260200161012f565b61018b6101863660046109ac565b610362565b005b61018b6101863660046109d6565b6101236101a9366004610a12565b6001600160a01b031660009081526007602052604090205460ff1690565b61018b6101d5366004610977565b61037b565b6101606101e8366004610977565b6103cf565b6101f5610439565b60405190815260200161012f565b6101f5610211366004610a12565b610449565b6101406104cf565b61018b610186366004610a2d565b61018b610186366004610a7f565b6101f56104de565b610140610250366004610977565b610553565b61012361015b366004610b5b565b60006001600160e01b031982166380ac58cd60e01b148061029457506001600160e01b03198216635b5e139f60e01b145b806102af57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102c490610b8e565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610b8e565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b5050505050905090565b600060405163ba6925a760e01b815260040160405180910390fd5b60405163ba6925a760e01b815260040160405180910390fd5b33610385826103cf565b6001600160a01b0316146103ac576040516322291aab60e11b815260040160405180910390fd5b336000908152600760205260409020805460ff191690556103cc81610574565b50565b6000818152600260205260408120546001600160a01b0316806102af5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064015b60405180910390fd5b600061044460065490565b905090565b60006001600160a01b0382166104b35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610430565b506001600160a01b031660009081526003602052604090205490565b6060600180546102c490610b8e565b3360009081526007602052604081205460ff161561050f57604051633841172960e11b815260040160405180910390fd5b600061051a60065490565b905061052a600680546001019055565b610534338261060a565b336000908152600760205260409020805460ff19166001179055905090565b6060604051806080016040528060598152602001610c756059913992915050565b600061057f826103cf565b905061058a826103cf565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45b5050565b6106068282604051806020016040528060008152506106298383610657565b61063660008484846107e2565b6106525760405162461bcd60e51b815260040161043090610bc8565b505050565b6001600160a01b0382166106ad5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610430565b6000818152600260205260409020546001600160a01b0316156107125760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610430565b6000818152600260205260409020546001600160a01b0316156107775760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610430565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156108d857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610826903390899088908890600401610c1a565b6020604051808303816000875af1925050508015610861575060408051601f3d908101601f1916820190925261085e91810190610c57565b60015b6108be573d80801561088f576040519150601f19603f3d011682016040523d82523d6000602084013e610894565b606091505b5080516000036108b65760405162461bcd60e51b815260040161043090610bc8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108dc565b5060015b949350505050565b6001600160e01b0319811681146103cc57600080fd5b60006020828403121561090c57600080fd5b8135610917816108e4565b9392505050565b6000815180845260005b8181101561094457602081850181015186830182015201610928565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610917602083018461091e565b60006020828403121561098957600080fd5b5035919050565b80356001600160a01b03811681146109a757600080fd5b919050565b600080604083850312156109bf57600080fd5b6109c883610990565b946020939093013593505050565b6000806000606084860312156109eb57600080fd5b6109f484610990565b9250610a0260208501610990565b9150604084013590509250925092565b600060208284031215610a2457600080fd5b61091782610990565b60008060408385031215610a4057600080fd5b610a4983610990565b915060208301358015158114610a5e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610a9557600080fd5b610a9e85610990565b9350610aac60208601610990565b925060408501359150606085013567ffffffffffffffff80821115610ad057600080fd5b818701915087601f830112610ae457600080fd5b813581811115610af657610af6610a69565b604051601f8201601f19908116603f01168101908382118183101715610b1e57610b1e610a69565b816040528281528a6020848701011115610b3757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610b6e57600080fd5b610b7783610990565b9150610b8560208401610990565b90509250929050565b600181811c90821680610ba257607f821691505b602082108103610bc257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610c4d9083018461091e565b9695505050505050565b600060208284031215610c6957600080fd5b8151610917816108e456fe68747470733a2f2f697066732e696f2f697066732f516d63783954395759785532774c756b356270744a5677716a747851504c3853786a67556b6f45614471577a74693f66696c656e616d653d42617369634e46542e706e67a2646970667358221220fa3e69156fa977512252253419bb8df11e897fca9cf9668afe2b29065dbfd2ee64736f6c63430008110033",
    "sourceMap": "674:4558:13:-:0;;;1242:39;;;;;;;;;;1390:113:0;;;;;;;;;;;;;-1:-1:-1;;;1390:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:0;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:0;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;674:4558:13;;14:127:19;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:19;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:19;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:19;;;2580:26;2531:89;-1:-1:-1;;1335:1:19;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:19;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:19;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:19;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:19:o;:::-;674:4558:13;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb4651461021e578063b88d4fde1461022c578063c2229fea1461023a578063c87b56dd14610242578063e985e9c51461025557600080fd5b80636352211e146101da5780636e02007d146101ed57806370a082311461020357806395d89b411461021657600080fd5b806323b872dd116100de57806323b872dd1461018d57806338e21cce1461019b57806342842e0e1461018d57806342966c68146101c757600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e3660046108fa565b610263565b60405190151581526020015b60405180910390f35b6101406102b5565b60405161012f9190610964565b61016061015b366004610977565b610347565b6040516001600160a01b03909116815260200161012f565b61018b6101863660046109ac565b610362565b005b61018b6101863660046109d6565b6101236101a9366004610a12565b6001600160a01b031660009081526007602052604090205460ff1690565b61018b6101d5366004610977565b61037b565b6101606101e8366004610977565b6103cf565b6101f5610439565b60405190815260200161012f565b6101f5610211366004610a12565b610449565b6101406104cf565b61018b610186366004610a2d565b61018b610186366004610a7f565b6101f56104de565b610140610250366004610977565b610553565b61012361015b366004610b5b565b60006001600160e01b031982166380ac58cd60e01b148061029457506001600160e01b03198216635b5e139f60e01b145b806102af57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102c490610b8e565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610b8e565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b5050505050905090565b600060405163ba6925a760e01b815260040160405180910390fd5b60405163ba6925a760e01b815260040160405180910390fd5b33610385826103cf565b6001600160a01b0316146103ac576040516322291aab60e11b815260040160405180910390fd5b336000908152600760205260409020805460ff191690556103cc81610574565b50565b6000818152600260205260408120546001600160a01b0316806102af5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064015b60405180910390fd5b600061044460065490565b905090565b60006001600160a01b0382166104b35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610430565b506001600160a01b031660009081526003602052604090205490565b6060600180546102c490610b8e565b3360009081526007602052604081205460ff161561050f57604051633841172960e11b815260040160405180910390fd5b600061051a60065490565b905061052a600680546001019055565b610534338261060a565b336000908152600760205260409020805460ff19166001179055905090565b6060604051806080016040528060598152602001610c756059913992915050565b600061057f826103cf565b905061058a826103cf565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45b5050565b6106068282604051806020016040528060008152506106298383610657565b61063660008484846107e2565b6106525760405162461bcd60e51b815260040161043090610bc8565b505050565b6001600160a01b0382166106ad5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610430565b6000818152600260205260409020546001600160a01b0316156107125760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610430565b6000818152600260205260409020546001600160a01b0316156107775760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610430565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156108d857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610826903390899088908890600401610c1a565b6020604051808303816000875af1925050508015610861575060408051601f3d908101601f1916820190925261085e91810190610c57565b60015b6108be573d80801561088f576040519150601f19603f3d011682016040523d82523d6000602084013e610894565b606091505b5080516000036108b65760405162461bcd60e51b815260040161043090610bc8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108dc565b5060015b949350505050565b6001600160e01b0319811681146103cc57600080fd5b60006020828403121561090c57600080fd5b8135610917816108e4565b9392505050565b6000815180845260005b8181101561094457602081850181015186830182015201610928565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610917602083018461091e565b60006020828403121561098957600080fd5b5035919050565b80356001600160a01b03811681146109a757600080fd5b919050565b600080604083850312156109bf57600080fd5b6109c883610990565b946020939093013593505050565b6000806000606084860312156109eb57600080fd5b6109f484610990565b9250610a0260208501610990565b9150604084013590509250925092565b600060208284031215610a2457600080fd5b61091782610990565b60008060408385031215610a4057600080fd5b610a4983610990565b915060208301358015158114610a5e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610a9557600080fd5b610a9e85610990565b9350610aac60208601610990565b925060408501359150606085013567ffffffffffffffff80821115610ad057600080fd5b818701915087601f830112610ae457600080fd5b813581811115610af657610af6610a69565b604051601f8201601f19908116603f01168101908382118183101715610b1e57610b1e610a69565b816040528281528a6020848701011115610b3757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610b6e57600080fd5b610b7783610990565b9150610b8560208401610990565b90509250929050565b600181811c90821680610ba257607f821691505b602082108103610bc257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610c4d9083018461091e565b9695505050505050565b600060208284031215610c6957600080fd5b8151610917816108e456fe68747470733a2f2f697066732e696f2f697066732f516d63783954395759785532774c756b356270744a5677716a747851504c3853786a67556b6f45614471577a74693f66696c656e616d653d42617369634e46542e706e67a2646970667358221220fa3e69156fa977512252253419bb8df11e897fca9cf9668afe2b29065dbfd2ee64736f6c63430008110033",
    "sourceMap": "674:4558:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:0;;;;;;:::i;:::-;;:::i;:::-;;;565:14:19;;558:22;540:41;;528:2;513:18;1570:300:0;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;4902:121:13:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1594:32:19;;;1576:51;;1564:2;1549:18;4902:121:13;1430:203:19;4529:108:13;;;;;;:::i;:::-;;:::i;:::-;;4332:122;;;;;;:::i;3449:103::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3530:15:13;3507:4;3530:15;;;:7;:15;;;;;;;;;3449:103;2535:210;;;;;;:::i;:::-;;:::i;2190:219:0:-;;;;;;:::i;:::-;;:::i;3274:104:13:-;;;:::i;:::-;;;2745:25:19;;;2733:2;2718:18;3274:104:13;2599:177:19;1929:204:0;;;;;;:::i;:::-;;:::i;2633:102::-;;;:::i;4712:115:13:-;;;;;;:::i;3916:140::-;;;;;;:::i;1969:263::-;;;:::i;3021:208::-;;;;;;:::i;:::-;;:::i;5098:132::-;;;;;;:::i;1570:300:0:-;1672:4;-1:-1:-1;;;;;;1707:40:0;;-1:-1:-1;;;1707:40:0;;:104;;-1:-1:-1;;;;;;;1763:48:0;;-1:-1:-1;;;1763:48:0;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1827:36:0;1688:175;1570:300;-1:-1:-1;;1570:300:0:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;4902:121:13:-;4962:7;4988:28;;-1:-1:-1;;;4988:28:13;;;;;;;;;;;4529:108;4602:28;;-1:-1:-1;;;4602:28:13;;;;;;;;;;;2535:210;2615:10;2595:16;2603:7;2595;:16::i;:::-;-1:-1:-1;;;;;2595:30:13;;2591:88;;2648:20;;-1:-1:-1;;;2648:20:13;;;;;;;;;;;2591:88;2703:10;2695:19;;;;:7;:19;;;;;2688:26;;-1:-1:-1;;2688:26:13;;;2724:14;2730:7;2724:5;:14::i;:::-;2535:210;:::o;2190:219:0:-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:0;;2324:56;;;;-1:-1:-1;;;2324:56:0;;5260:2:19;2324:56:0;;;5242:21:19;5299:2;5279:18;;;5272:30;5338:26;5318:18;;;5311:54;5382:18;;2324:56:0;;;;;;;;3274:104:13;3324:4;3347:24;:14;918::6;;827:112;3347:24:13;3340:31;;3274:104;:::o;1929:204:0:-;2001:7;-1:-1:-1;;;;;2028:19:0;;2020:73;;;;-1:-1:-1;;;2020:73:0;;5613:2:19;2020:73:0;;;5595:21:19;5652:2;5632:18;;;5625:30;5691:34;5671:18;;;5664:62;-1:-1:-1;;;5742:18:19;;;5735:39;5791:19;;2020:73:0;5411:405:19;2020:73:0;-1:-1:-1;;;;;;2110:16:0;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;1969:263:13:-;1619:10;2028:7;1611:19;;;:7;:19;;;;;;;;1607:81;;;1653:24;;-1:-1:-1;;;1653:24:13;;;;;;;;;;;1607:81;2047:15:::1;2065:24;:14;918::6::0;;827:112;2065:24:13::1;2047:42;;2099:26;:14;1032:19:6::0;;1050:1;1032:19;;;945:123;2099:26:13::1;2135:30;2145:10;2157:7;2135:9;:30::i;:::-;2183:10;2175:19;::::0;;;:7:::1;:19;::::0;;;;:26;;-1:-1:-1;;2175:26:13::1;2197:4;2175:26;::::0;;2218:7;-1:-1:-1;1969:263:13;:::o;3021:208::-;3087:13;3112:110;;;;;;;;;;;;;;;;;;3021:208;-1:-1:-1;;3021:208:13:o;10171:762:0:-;10230:13;10246:23;10261:7;10246:14;:23::i;:::-;10230:39;;10441:23;10456:7;10441:14;:23::i;:::-;10509:24;;;;:15;:24;;;;;;;;10502:31;;-1:-1:-1;;;;;;10502:31:0;;;;;;-1:-1:-1;;;;;10749:16:0;;;;;:9;:16;;;;;:21;;-1:-1:-1;;10749:21:0;;;10797:16;;;:7;:16;;;;;;10790:23;;;;;;;10829:36;10433:31;;-1:-1:-1;10525:7:0;;10829:36;;10509:24;;10829:36;10876:50;10220:713;10171:762;:::o;7995:108::-;8070:26;8080:2;8084:7;8070:26;;;;;;;;;;;;8418:18;8424:2;8428:7;8418:5;:18::i;:::-;8467:53;8498:1;8502:2;8506:7;8515:4;8467:22;:53::i;:::-;8446:150;;;;-1:-1:-1;;;8446:150:0;;;;;;;:::i;:::-;8324:279;;;:::o;8925:920::-;-1:-1:-1;;;;;9004:16:0;;8996:61;;;;-1:-1:-1;;;8996:61:0;;6442:2:19;8996:61:0;;;6424:21:19;;;6461:18;;;6454:30;6520:34;6500:18;;;6493:62;6572:18;;8996:61:0;6240:356:19;8996:61:0;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:0;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:0;;6803:2:19;9067:58:0;;;6785:21:19;6842:2;6822:18;;;6815:30;6881;6861:18;;;6854:58;6929:18;;9067:58:0;6601:352:19;9067:58:0;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:0;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:0;;6803:2:19;9271:58:0;;;6785:21:19;6842:2;6822:18;;;6815:30;6881;6861:18;;;6854:58;6929:18;;9271:58:0;6601:352:19;9271:58:0;-1:-1:-1;;;;;9671:13:0;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:0;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;10220:713;10171:762;:::o;13925:831::-;14074:4;-1:-1:-1;;;;;14094:13:0;;1702:19:4;:23;14090:660:0;;14129:71;;-1:-1:-1;;;14129:71:0;;-1:-1:-1;;;;;14129:36:0;;;;;:71;;719:10:5;;14180:4:0;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:0;;;;;;;;-1:-1:-1;;14129:71:0;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:0;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:0;-1:-1:-1;;;14250:51:0;;-1:-1:-1;14243:58:0;;14090:660;-1:-1:-1;14735:4:0;14090:660;13925:831;;;;;;:::o;14:131:19:-;-1:-1:-1;;;;;;88:32:19;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:19:o;592:423::-;634:3;672:5;666:12;699:6;694:3;687:19;724:1;734:162;748:6;745:1;742:13;734:162;;;810:4;866:13;;;862:22;;856:29;838:11;;;834:20;;827:59;763:12;734:162;;;738:3;941:1;934:4;925:6;920:3;916:16;912:27;905:38;1004:4;997:2;993:7;988:2;980:6;976:15;972:29;967:3;963:39;959:50;952:57;;;592:423;;;;:::o;1020:220::-;1169:2;1158:9;1151:21;1132:4;1189:45;1230:2;1219:9;1215:18;1207:6;1189:45;:::i;1245:180::-;1304:6;1357:2;1345:9;1336:7;1332:23;1328:32;1325:52;;;1373:1;1370;1363:12;1325:52;-1:-1:-1;1396:23:19;;1245:180;-1:-1:-1;1245:180:19:o;1638:173::-;1706:20;;-1:-1:-1;;;;;1755:31:19;;1745:42;;1735:70;;1801:1;1798;1791:12;1735:70;1638:173;;;:::o;1816:254::-;1884:6;1892;1945:2;1933:9;1924:7;1920:23;1916:32;1913:52;;;1961:1;1958;1951:12;1913:52;1984:29;2003:9;1984:29;:::i;:::-;1974:39;2060:2;2045:18;;;;2032:32;;-1:-1:-1;;;1816:254:19:o;2075:328::-;2152:6;2160;2168;2221:2;2209:9;2200:7;2196:23;2192:32;2189:52;;;2237:1;2234;2227:12;2189:52;2260:29;2279:9;2260:29;:::i;:::-;2250:39;;2308:38;2342:2;2331:9;2327:18;2308:38;:::i;:::-;2298:48;;2393:2;2382:9;2378:18;2365:32;2355:42;;2075:328;;;;;:::o;2408:186::-;2467:6;2520:2;2508:9;2499:7;2495:23;2491:32;2488:52;;;2536:1;2533;2526:12;2488:52;2559:29;2578:9;2559:29;:::i;2781:347::-;2846:6;2854;2907:2;2895:9;2886:7;2882:23;2878:32;2875:52;;;2923:1;2920;2913:12;2875:52;2946:29;2965:9;2946:29;:::i;:::-;2936:39;;3025:2;3014:9;3010:18;2997:32;3072:5;3065:13;3058:21;3051:5;3048:32;3038:60;;3094:1;3091;3084:12;3038:60;3117:5;3107:15;;;2781:347;;;;;:::o;3133:127::-;3194:10;3189:3;3185:20;3182:1;3175:31;3225:4;3222:1;3215:15;3249:4;3246:1;3239:15;3265:1138;3360:6;3368;3376;3384;3437:3;3425:9;3416:7;3412:23;3408:33;3405:53;;;3454:1;3451;3444:12;3405:53;3477:29;3496:9;3477:29;:::i;:::-;3467:39;;3525:38;3559:2;3548:9;3544:18;3525:38;:::i;:::-;3515:48;;3610:2;3599:9;3595:18;3582:32;3572:42;;3665:2;3654:9;3650:18;3637:32;3688:18;3729:2;3721:6;3718:14;3715:34;;;3745:1;3742;3735:12;3715:34;3783:6;3772:9;3768:22;3758:32;;3828:7;3821:4;3817:2;3813:13;3809:27;3799:55;;3850:1;3847;3840:12;3799:55;3886:2;3873:16;3908:2;3904;3901:10;3898:36;;;3914:18;;:::i;:::-;3989:2;3983:9;3957:2;4043:13;;-1:-1:-1;;4039:22:19;;;4063:2;4035:31;4031:40;4019:53;;;4087:18;;;4107:22;;;4084:46;4081:72;;;4133:18;;:::i;:::-;4173:10;4169:2;4162:22;4208:2;4200:6;4193:18;4248:7;4243:2;4238;4234;4230:11;4226:20;4223:33;4220:53;;;4269:1;4266;4259:12;4220:53;4325:2;4320;4316;4312:11;4307:2;4299:6;4295:15;4282:46;4370:1;4365:2;4360;4352:6;4348:15;4344:24;4337:35;4391:6;4381:16;;;;;;;3265:1138;;;;;;;:::o;4408:260::-;4476:6;4484;4537:2;4525:9;4516:7;4512:23;4508:32;4505:52;;;4553:1;4550;4543:12;4505:52;4576:29;4595:9;4576:29;:::i;:::-;4566:39;;4624:38;4658:2;4647:9;4643:18;4624:38;:::i;:::-;4614:48;;4408:260;;;;;:::o;4673:380::-;4752:1;4748:12;;;;4795;;;4816:61;;4870:4;4862:6;4858:17;4848:27;;4816:61;4923:2;4915:6;4912:14;4892:18;4889:38;4886:161;;4969:10;4964:3;4960:20;4957:1;4950:31;5004:4;5001:1;4994:15;5032:4;5029:1;5022:15;4886:161;;4673:380;;;:::o;5821:414::-;6023:2;6005:21;;;6062:2;6042:18;;;6035:30;6101:34;6096:2;6081:18;;6074:62;-1:-1:-1;;;6167:2:19;6152:18;;6145:48;6225:3;6210:19;;5821:414::o;6958:489::-;-1:-1:-1;;;;;7227:15:19;;;7209:34;;7279:15;;7274:2;7259:18;;7252:43;7326:2;7311:18;;7304:34;;;7374:3;7369:2;7354:18;;7347:31;;;7152:4;;7395:46;;7421:19;;7413:6;7395:46;:::i;:::-;7387:54;6958:489;-1:-1:-1;;;;;;6958:489:19:o;7452:249::-;7521:6;7574:2;7562:9;7553:7;7549:23;7545:32;7542:52;;;7590:1;7587;7580:12;7542:52;7622:9;7616:16;7641:30;7665:5;7641:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "getApproved(uint256)": "081812fc",
    "getTokenCounter()": "6e02007d",
    "hasMinted(address)": "38e21cce",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintNft()": "c2229fea",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NTNFT__CanOnlyMintOnce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NTNFT__NftNotTransferrable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NTNFT__NotNFTOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"hasMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Spoodermandaleon\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"id of an NFT.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"}},\"title\":\"OxAuth\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Function disabled as cannot transfer a soulbound nft\"},\"burn(uint256)\":{\"notice\":\"allows an owner of the NFT to burn it.\"},\"constructor\":{\"notice\":\"Gives name and symbol to the NFT.\"},\"getApproved(uint256)\":{\"notice\":\"Function disabled as cannot transfer a soulbound nft\"},\"getTokenCounter()\":{\"notice\":\"gets the tokenCounter.\"},\"hasMinted(address)\":{\"notice\":\"returns whether an address has minted NFT or not\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Function disabled as cannot transfer a soulbound nft\"},\"mintNft()\":{\"notice\":\"allows an address to mint an NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Function disabled as cannot transfer a soulbound nft\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Function disabled as cannot transfer a soulbound nft\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Function disabled as cannot transfer a soulbound nft\"},\"tokenURI(uint256)\":{\"notice\":\"gets the token URI of an NFT.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Function disabled as cannot transfer a soulbound nft\"}},\"notice\":\"OxAuth provides the functionality to mint soul bound token but only one address could mint once.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/NTNFT.sol\":\"NTNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@opensezppling/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/NTNFT.sol\":{\"keccak256\":\"0x4929a1e9f68c6104ce73aff53574642ab91b95106cf4cf7de63106467f7efee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f9725c2766d549f53078de55e6e6ea86f9c556c36959bb4a929ba402b7e31cf\",\"dweb:/ipfs/QmUoQzkqnabhqoh69mQWC5sW1WNdsrhGsfM1NeJMhF9je1\"]},\"src/interfaces/INTNFT.sol\":{\"keccak256\":\"0x44d965014a03a52c8ef84c833bcf20ceaef54b51f5ef190f0a54f9b6fb1ea93c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8358427b088d9a3d7b1c83b5b74604e549a539bbe9c7edb76d36eb69ad8d122c\",\"dweb:/ipfs/QmYaZEX3isefF8RP1n9XrNuiQhEqXPRVjSawBkbHjcMRS1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NTNFT__CanOnlyMintOnce"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NTNFT__NftNotTransferrable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NTNFT__NotNFTOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasMinted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintNft",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "params": {
              "tokenId": "id of an NFT."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "approve(address,uint256)": {
            "notice": "Function disabled as cannot transfer a soulbound nft"
          },
          "burn(uint256)": {
            "notice": "allows an owner of the NFT to burn it."
          },
          "constructor": {
            "notice": "Gives name and symbol to the NFT."
          },
          "getApproved(uint256)": {
            "notice": "Function disabled as cannot transfer a soulbound nft"
          },
          "getTokenCounter()": {
            "notice": "gets the tokenCounter."
          },
          "hasMinted(address)": {
            "notice": "returns whether an address has minted NFT or not"
          },
          "isApprovedForAll(address,address)": {
            "notice": "Function disabled as cannot transfer a soulbound nft"
          },
          "mintNft()": {
            "notice": "allows an address to mint an NFT."
          },
          "safeTransferFrom(address,address,uint256)": {
            "notice": "Function disabled as cannot transfer a soulbound nft"
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "notice": "Function disabled as cannot transfer a soulbound nft"
          },
          "setApprovalForAll(address,bool)": {
            "notice": "Function disabled as cannot transfer a soulbound nft"
          },
          "tokenURI(uint256)": {
            "notice": "gets the token URI of an NFT."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Function disabled as cannot transfer a soulbound nft"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@opensezppling/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/NTNFT.sol": "NTNFT"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/NTNFT.sol": {
        "keccak256": "0x4929a1e9f68c6104ce73aff53574642ab91b95106cf4cf7de63106467f7efee2",
        "urls": [
          "bzz-raw://7f9725c2766d549f53078de55e6e6ea86f9c556c36959bb4a929ba402b7e31cf",
          "dweb:/ipfs/QmUoQzkqnabhqoh69mQWC5sW1WNdsrhGsfM1NeJMhF9je1"
        ],
        "license": "MIT"
      },
      "src/interfaces/INTNFT.sol": {
        "keccak256": "0x44d965014a03a52c8ef84c833bcf20ceaef54b51f5ef190f0a54f9b6fb1ea93c",
        "urls": [
          "bzz-raw://8358427b088d9a3d7b1c83b5b74604e549a539bbe9c7edb76d36eb69ad8d122c",
          "dweb:/ipfs/QmYaZEX3isefF8RP1n9XrNuiQhEqXPRVjSawBkbHjcMRS1"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/NTNFT.sol",
    "id": 3847,
    "exportedSymbols": {
      "Address": [
        1417
      ],
      "Context": [
        1439
      ],
      "Counters": [
        1513
      ],
      "ERC165": [
        1766
      ],
      "ERC721": [
        926
      ],
      "IERC165": [
        1778
      ],
      "IERC721": [
        1042
      ],
      "IERC721Metadata": [
        1087
      ],
      "IERC721Receiver": [
        1060
      ],
      "INTNFT": [
        4273
      ],
      "Math": [
        2644
      ],
      "NTNFT": [
        3846
      ],
      "NTNFT__CanOnlyMintOnce": [
        3601
      ],
      "NTNFT__NftNotTransferrable": [
        3599
      ],
      "NTNFT__NotNFTOwner": [
        3603
      ],
      "SignedMath": [
        2749
      ],
      "Strings": [
        1742
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:5199:13",
    "nodes": [
      {
        "id": 3594,
        "nodeType": "PragmaDirective",
        "src": "33:23:13",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 3595,
        "nodeType": "ImportDirective",
        "src": "58:33:13",
        "nodes": [],
        "absolutePath": "src/interfaces/INTNFT.sol",
        "file": "./interfaces/INTNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3847,
        "sourceUnit": 4274,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3596,
        "nodeType": "ImportDirective",
        "src": "92:56:13",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3847,
        "sourceUnit": 927,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3597,
        "nodeType": "ImportDirective",
        "src": "149:51:13",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "file": "openzeppelin-contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3847,
        "sourceUnit": 1514,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3599,
        "nodeType": "ErrorDefinition",
        "src": "407:35:13",
        "nodes": [],
        "errorSelector": "ba6925a7",
        "name": "NTNFT__NftNotTransferrable",
        "nameLocation": "413:26:13",
        "parameters": {
          "id": 3598,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "439:2:13"
        }
      },
      {
        "id": 3601,
        "nodeType": "ErrorDefinition",
        "src": "443:31:13",
        "nodes": [],
        "errorSelector": "70822e52",
        "name": "NTNFT__CanOnlyMintOnce",
        "nameLocation": "449:22:13",
        "parameters": {
          "id": 3600,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "471:2:13"
        }
      },
      {
        "id": 3603,
        "nodeType": "ErrorDefinition",
        "src": "475:27:13",
        "nodes": [],
        "errorSelector": "44523556",
        "name": "NTNFT__NotNFTOwner",
        "nameLocation": "481:18:13",
        "parameters": {
          "id": 3602,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "499:2:13"
        }
      },
      {
        "id": 3846,
        "nodeType": "ContractDefinition",
        "src": "674:4558:13",
        "nodes": [
          {
            "id": 3612,
            "nodeType": "UsingForDirective",
            "src": "745:36:13",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3609,
              "name": "Counters",
              "nameLocations": [
                "751:8:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1513,
              "src": "751:8:13"
            },
            "typeName": {
              "id": 3611,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3610,
                "name": "Counters.Counter",
                "nameLocations": [
                  "764:8:13",
                  "773:7:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1445,
                "src": "764:16:13"
              },
              "referencedDeclaration": 1445,
              "src": "764:16:13",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1445_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 3615,
            "nodeType": "VariableDeclaration",
            "src": "787:39:13",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_tokenCounter",
            "nameLocation": "812:14:13",
            "scope": 3846,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1445_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 3614,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3613,
                "name": "Counters.Counter",
                "nameLocations": [
                  "787:8:13",
                  "796:7:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1445,
                "src": "787:16:13"
              },
              "referencedDeclaration": 1445,
              "src": "787:16:13",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1445_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 3620,
            "nodeType": "VariableDeclaration",
            "src": "933:40:13",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 3616,
              "nodeType": "StructuredDocumentation",
              "src": "833:95:13",
              "text": "@notice this mapping stores whether that particular address has already minted NFT or not."
            },
            "mutability": "mutable",
            "name": "_minter",
            "nameLocation": "966:7:13",
            "scope": 3846,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3619,
              "keyType": {
                "id": 3617,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "941:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "933:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3618,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "952:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 3629,
            "nodeType": "FunctionDefinition",
            "src": "1242:39:13",
            "nodes": [],
            "body": {
              "id": 3628,
              "nodeType": "Block",
              "src": "1279:2:13",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 3621,
              "nodeType": "StructuredDocumentation",
              "src": "1191:46:13",
              "text": "@notice Gives name and symbol to the NFT."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4f7841757468",
                    "id": 3624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1263:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_aa9a643ca79706193333d20af4934c3db63b588fe85f7c9a79f76346311179de",
                      "typeString": "literal_string \"OxAuth\""
                    },
                    "value": "OxAuth"
                  },
                  {
                    "hexValue": "4f78",
                    "id": 3625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1273:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8fb1f07be3d12b0a6f81a6444e8c0c943c7c3f25e0b179d648db2d77ce6a4d1d",
                      "typeString": "literal_string \"Ox\""
                    },
                    "value": "Ox"
                  }
                ],
                "id": 3626,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3623,
                  "name": "ERC721",
                  "nameLocations": [
                    "1256:6:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 926,
                  "src": "1256:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1256:22:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1253:2:13"
            },
            "returnParameters": {
              "id": 3627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1279:0:13"
            },
            "scope": 3846,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3643,
            "nodeType": "ModifierDefinition",
            "src": "1573:132:13",
            "nodes": [],
            "body": {
              "id": 3642,
              "nodeType": "Block",
              "src": "1597:108:13",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 3632,
                      "name": "_minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3620,
                      "src": "1611:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3635,
                    "indexExpression": {
                      "expression": {
                        "id": 3633,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1619:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1623:6:13",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1619:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1611:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3640,
                  "nodeType": "IfStatement",
                  "src": "1607:81:13",
                  "trueBody": {
                    "id": 3639,
                    "nodeType": "Block",
                    "src": "1632:56:13",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3636,
                            "name": "NTNFT__CanOnlyMintOnce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3601,
                            "src": "1653:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1653:24:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3638,
                        "nodeType": "RevertStatement",
                        "src": "1646:31:13"
                      }
                    ]
                  }
                },
                {
                  "id": 3641,
                  "nodeType": "PlaceholderStatement",
                  "src": "1697:1:13"
                }
              ]
            },
            "documentation": {
              "id": 3630,
              "nodeType": "StructuredDocumentation",
              "src": "1495:73:13",
              "text": "@notice passes if an address has not minted NFT before else reverts."
            },
            "name": "onlyOnceMint",
            "nameLocation": "1582:12:13",
            "parameters": {
              "id": 3631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:2:13"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3679,
            "nodeType": "FunctionDefinition",
            "src": "1969:263:13",
            "nodes": [],
            "body": {
              "id": 3678,
              "nodeType": "Block",
              "src": "2037:195:13",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3653,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "2055:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3678,
                      "src": "2047:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3652,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2047:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3657,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3654,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3615,
                        "src": "2065:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1445_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 3655,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2080:7:13",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1457,
                      "src": "2065:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1445_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1445_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 3656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:24:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2047:42:13"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3658,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3615,
                        "src": "2099:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1445_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 3660,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2114:9:13",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1471,
                      "src": "2099:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1445_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1445_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 3661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:26:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3662,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:26:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3664,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2145:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2149:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2145:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3666,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3653,
                        "src": "2157:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3663,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        494,
                        523
                      ],
                      "referencedDeclaration": 494,
                      "src": "2135:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:30:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3668,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:30:13"
                },
                {
                  "expression": {
                    "id": 3674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3669,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "2175:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3672,
                      "indexExpression": {
                        "expression": {
                          "id": 3670,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2183:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2187:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2183:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2175:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2197:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2175:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3675,
                  "nodeType": "ExpressionStatement",
                  "src": "2175:26:13"
                },
                {
                  "expression": {
                    "id": 3676,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3653,
                    "src": "2218:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3651,
                  "id": 3677,
                  "nodeType": "Return",
                  "src": "2211:14:13"
                }
              ]
            },
            "baseFunctions": [
              4253
            ],
            "documentation": {
              "id": 3644,
              "nodeType": "StructuredDocumentation",
              "src": "1918:46:13",
              "text": "@notice allows an address to mint an NFT."
            },
            "functionSelector": "c2229fea",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3648,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3647,
                  "name": "onlyOnceMint",
                  "nameLocations": [
                    "2006:12:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3643,
                  "src": "2006:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2006:12:13"
              }
            ],
            "name": "mintNft",
            "nameLocation": "1978:7:13",
            "overrides": {
              "id": 3646,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1997:8:13"
            },
            "parameters": {
              "id": 3645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1985:2:13"
            },
            "returnParameters": {
              "id": 3651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3650,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3679,
                  "src": "2028:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2027:9:13"
            },
            "scope": 3846,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3708,
            "nodeType": "FunctionDefinition",
            "src": "2535:210:13",
            "nodes": [],
            "body": {
              "id": 3707,
              "nodeType": "Block",
              "src": "2581:164:13",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 3687,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3682,
                          "src": "2603:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3686,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2595:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 3688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2595:16:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 3689,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2615:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2619:6:13",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2615:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2595:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3696,
                  "nodeType": "IfStatement",
                  "src": "2591:88:13",
                  "trueBody": {
                    "id": 3695,
                    "nodeType": "Block",
                    "src": "2627:52:13",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3692,
                            "name": "NTNFT__NotNFTOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3603,
                            "src": "2648:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2648:20:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3694,
                        "nodeType": "RevertStatement",
                        "src": "2641:27:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2688:26:13",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3697,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "2695:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3700,
                      "indexExpression": {
                        "expression": {
                          "id": 3698,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2703:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2707:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2703:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2695:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3702,
                  "nodeType": "ExpressionStatement",
                  "src": "2688:26:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3704,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3682,
                        "src": "2730:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3703,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "2724:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:14:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3706,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:14:13"
                }
              ]
            },
            "baseFunctions": [
              4259
            ],
            "documentation": {
              "id": 3680,
              "nodeType": "StructuredDocumentation",
              "src": "2442:88:13",
              "text": "@notice allows an owner of the NFT to burn it.\n @param tokenId id of an NFT."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2544:4:13",
            "overrides": {
              "id": 3684,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2572:8:13"
            },
            "parameters": {
              "id": 3683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3682,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2554:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3708,
                  "src": "2549:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3681,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2549:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2548:14:13"
            },
            "returnParameters": {
              "id": 3685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2581:0:13"
            },
            "scope": 3846,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3720,
            "nodeType": "FunctionDefinition",
            "src": "3021:208:13",
            "nodes": [],
            "body": {
              "id": 3719,
              "nodeType": "Block",
              "src": "3102:127:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "68747470733a2f2f697066732e696f2f697066732f516d63783954395759785532774c756b356270744a5677716a747851504c3853786a67556b6f45614471577a74693f66696c656e616d653d42617369634e46542e706e67",
                    "id": 3717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3131:91:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_282ab5a9f5a1528e73431797dedcc64bda81b04ad3ecd4b510ec3450b2f80c85",
                      "typeString": "literal_string \"https://ipfs.io/ipfs/Qmcx9T9WYxU2wLuk5bptJVwqjtxQPL8SxjgUkoEaDqWzti?filename=BasicNFT.png\""
                    },
                    "value": "https://ipfs.io/ipfs/Qmcx9T9WYxU2wLuk5bptJVwqjtxQPL8SxjgUkoEaDqWzti?filename=BasicNFT.png"
                  },
                  "functionReturnParameters": 3716,
                  "id": 3718,
                  "nodeType": "Return",
                  "src": "3112:110:13"
                }
              ]
            },
            "baseFunctions": [
              204
            ],
            "documentation": {
              "id": 3709,
              "nodeType": "StructuredDocumentation",
              "src": "2974:42:13",
              "text": "@notice gets the token URI of an NFT."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3030:8:13",
            "overrides": {
              "id": 3713,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3069:8:13"
            },
            "parameters": {
              "id": 3712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3711,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3720,
                  "src": "3039:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3710,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3039:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3038:18:13"
            },
            "returnParameters": {
              "id": 3716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3715,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3720,
                  "src": "3087:13:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3714,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3086:15:13"
            },
            "scope": 3846,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3731,
            "nodeType": "FunctionDefinition",
            "src": "3274:104:13",
            "nodes": [],
            "body": {
              "id": 3730,
              "nodeType": "Block",
              "src": "3330:48:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3726,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3615,
                        "src": "3347:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1445_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 3727,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3362:7:13",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1457,
                      "src": "3347:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1445_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1445_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 3728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3347:24:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3725,
                  "id": 3729,
                  "nodeType": "Return",
                  "src": "3340:31:13"
                }
              ]
            },
            "baseFunctions": [
              4265
            ],
            "documentation": {
              "id": 3721,
              "nodeType": "StructuredDocumentation",
              "src": "3235:34:13",
              "text": "@notice gets the tokenCounter."
            },
            "functionSelector": "6e02007d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenCounter",
            "nameLocation": "3283:15:13",
            "parameters": {
              "id": 3722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3298:2:13"
            },
            "returnParameters": {
              "id": 3725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3724,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3731,
                  "src": "3324:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3723,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3323:6:13"
            },
            "scope": 3846,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3744,
            "nodeType": "FunctionDefinition",
            "src": "3449:103:13",
            "nodes": [],
            "body": {
              "id": 3743,
              "nodeType": "Block",
              "src": "3513:39:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3739,
                      "name": "_minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3620,
                      "src": "3530:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3741,
                    "indexExpression": {
                      "id": 3740,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3734,
                      "src": "3538:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3530:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3738,
                  "id": 3742,
                  "nodeType": "Return",
                  "src": "3523:22:13"
                }
              ]
            },
            "baseFunctions": [
              4272
            ],
            "documentation": {
              "id": 3732,
              "nodeType": "StructuredDocumentation",
              "src": "3384:60:13",
              "text": "@notice returns whether an address has minted NFT or not"
            },
            "functionSelector": "38e21cce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasMinted",
            "nameLocation": "3458:9:13",
            "parameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3734,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "3476:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3744,
                  "src": "3468:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3468:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3467:16:13"
            },
            "returnParameters": {
              "id": 3738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3737,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3744,
                  "src": "3507:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3736,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3507:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3506:6:13"
            },
            "scope": 3846,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3761,
            "nodeType": "FunctionDefinition",
            "src": "3916:140:13",
            "nodes": [],
            "body": {
              "id": 3760,
              "nodeType": "Block",
              "src": "4004:52:13",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3757,
                      "name": "NTNFT__NftNotTransferrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "4021:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4021:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3759,
                  "nodeType": "RevertStatement",
                  "src": "4014:35:13"
                }
              ]
            },
            "baseFunctions": [
              385
            ],
            "documentation": {
              "id": 3745,
              "nodeType": "StructuredDocumentation",
              "src": "3847:64:13",
              "text": "@notice Function disabled as cannot transfer a soulbound nft"
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3925:16:13",
            "overrides": {
              "id": 3755,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3995:8:13"
            },
            "parameters": {
              "id": 3754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3761,
                  "src": "3942:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3942:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3761,
                  "src": "3951:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3951:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3761,
                  "src": "3960:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3960:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3761,
                  "src": "3969:12:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3752,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3969:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3941:41:13"
            },
            "returnParameters": {
              "id": 3756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4004:0:13"
            },
            "scope": 3846,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3776,
            "nodeType": "FunctionDefinition",
            "src": "4131:126:13",
            "nodes": [],
            "body": {
              "id": 3775,
              "nodeType": "Block",
              "src": "4205:52:13",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3772,
                      "name": "NTNFT__NftNotTransferrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "4222:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4222:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3774,
                  "nodeType": "RevertStatement",
                  "src": "4215:35:13"
                }
              ]
            },
            "baseFunctions": [
              355
            ],
            "documentation": {
              "id": 3762,
              "nodeType": "StructuredDocumentation",
              "src": "4062:64:13",
              "text": "@notice Function disabled as cannot transfer a soulbound nft"
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4140:16:13",
            "overrides": {
              "id": 3770,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4196:8:13"
            },
            "parameters": {
              "id": 3769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3764,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3776,
                  "src": "4157:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4157:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3766,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3776,
                  "src": "4166:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4166:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3776,
                  "src": "4175:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4175:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4156:27:13"
            },
            "returnParameters": {
              "id": 3771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4205:0:13"
            },
            "scope": 3846,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3791,
            "nodeType": "FunctionDefinition",
            "src": "4332:122:13",
            "nodes": [],
            "body": {
              "id": 3790,
              "nodeType": "Block",
              "src": "4402:52:13",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3787,
                      "name": "NTNFT__NftNotTransferrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "4419:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4419:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3789,
                  "nodeType": "RevertStatement",
                  "src": "4412:35:13"
                }
              ]
            },
            "baseFunctions": [
              336
            ],
            "documentation": {
              "id": 3777,
              "nodeType": "StructuredDocumentation",
              "src": "4263:64:13",
              "text": "@notice Function disabled as cannot transfer a soulbound nft"
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4341:12:13",
            "overrides": {
              "id": 3785,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4393:8:13"
            },
            "parameters": {
              "id": 3784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3791,
                  "src": "4354:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4354:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3781,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3791,
                  "src": "4363:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4363:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3783,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3791,
                  "src": "4372:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4353:27:13"
            },
            "returnParameters": {
              "id": 3786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4402:0:13"
            },
            "scope": 3846,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3804,
            "nodeType": "FunctionDefinition",
            "src": "4529:108:13",
            "nodes": [],
            "body": {
              "id": 3803,
              "nodeType": "Block",
              "src": "4585:52:13",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3800,
                      "name": "NTNFT__NftNotTransferrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "4602:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4602:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3802,
                  "nodeType": "RevertStatement",
                  "src": "4595:35:13"
                }
              ]
            },
            "baseFunctions": [
              256
            ],
            "documentation": {
              "id": 3792,
              "nodeType": "StructuredDocumentation",
              "src": "4460:64:13",
              "text": "@notice Function disabled as cannot transfer a soulbound nft"
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4538:7:13",
            "overrides": {
              "id": 3798,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4576:8:13"
            },
            "parameters": {
              "id": 3797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3804,
                  "src": "4546:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4546:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3796,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3804,
                  "src": "4555:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4555:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4545:18:13"
            },
            "returnParameters": {
              "id": 3799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4585:0:13"
            },
            "scope": 3846,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3817,
            "nodeType": "FunctionDefinition",
            "src": "4712:115:13",
            "nodes": [],
            "body": {
              "id": 3816,
              "nodeType": "Block",
              "src": "4775:52:13",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3813,
                      "name": "NTNFT__NftNotTransferrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "4792:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4792:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3815,
                  "nodeType": "RevertStatement",
                  "src": "4785:35:13"
                }
              ]
            },
            "baseFunctions": [
              291
            ],
            "documentation": {
              "id": 3805,
              "nodeType": "StructuredDocumentation",
              "src": "4643:64:13",
              "text": "@notice Function disabled as cannot transfer a soulbound nft"
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4721:17:13",
            "overrides": {
              "id": 3811,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4766:8:13"
            },
            "parameters": {
              "id": 3810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3807,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3817,
                  "src": "4739:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4739:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3809,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3817,
                  "src": "4748:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3808,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4748:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4738:15:13"
            },
            "returnParameters": {
              "id": 3812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4775:0:13"
            },
            "scope": 3846,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3830,
            "nodeType": "FunctionDefinition",
            "src": "4902:121:13",
            "nodes": [],
            "body": {
              "id": 3829,
              "nodeType": "Block",
              "src": "4971:52:13",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3826,
                      "name": "NTNFT__NftNotTransferrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "4988:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4988:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3828,
                  "nodeType": "RevertStatement",
                  "src": "4981:35:13"
                }
              ]
            },
            "baseFunctions": [
              274
            ],
            "documentation": {
              "id": 3818,
              "nodeType": "StructuredDocumentation",
              "src": "4833:64:13",
              "text": "@notice Function disabled as cannot transfer a soulbound nft"
            },
            "functionSelector": "081812fc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "4911:11:13",
            "overrides": {
              "id": 3822,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4944:8:13"
            },
            "parameters": {
              "id": 3821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3820,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3830,
                  "src": "4923:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4923:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4922:9:13"
            },
            "returnParameters": {
              "id": 3825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3830,
                  "src": "4962:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4962:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4961:9:13"
            },
            "scope": 3846,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3845,
            "nodeType": "FunctionDefinition",
            "src": "5098:132:13",
            "nodes": [],
            "body": {
              "id": 3844,
              "nodeType": "Block",
              "src": "5178:52:13",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3841,
                      "name": "NTNFT__NftNotTransferrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "5195:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 3842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5195:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3843,
                  "nodeType": "RevertStatement",
                  "src": "5188:35:13"
                }
              ]
            },
            "baseFunctions": [
              309
            ],
            "documentation": {
              "id": 3831,
              "nodeType": "StructuredDocumentation",
              "src": "5029:64:13",
              "text": "@notice Function disabled as cannot transfer a soulbound nft"
            },
            "functionSelector": "e985e9c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "5107:16:13",
            "overrides": {
              "id": 3837,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5154:8:13"
            },
            "parameters": {
              "id": 3836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3845,
                  "src": "5124:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5124:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3845,
                  "src": "5133:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5133:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5123:18:13"
            },
            "returnParameters": {
              "id": 3840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3839,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3845,
                  "src": "5172:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3838,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5172:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5171:6:13"
            },
            "scope": 3846,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3605,
              "name": "INTNFT",
              "nameLocations": [
                "692:6:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4273,
              "src": "692:6:13"
            },
            "id": 3606,
            "nodeType": "InheritanceSpecifier",
            "src": "692:6:13"
          },
          {
            "baseName": {
              "id": 3607,
              "name": "ERC721",
              "nameLocations": [
                "700:6:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 926,
              "src": "700:6:13"
            },
            "id": 3608,
            "nodeType": "InheritanceSpecifier",
            "src": "700:6:13"
          }
        ],
        "canonicalName": "NTNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3604,
          "nodeType": "StructuredDocumentation",
          "src": "504:169:13",
          "text": "@title OxAuth\n @author Spooderman\n @author daleon\n @notice OxAuth provides the functionality to mint soul bound token but only one address could mint once."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3846,
          926,
          1087,
          1042,
          1766,
          1778,
          1439,
          4273
        ],
        "name": "NTNFT",
        "nameLocation": "683:5:13",
        "scope": 3847,
        "usedErrors": [
          3599,
          3601,
          3603
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 13
}